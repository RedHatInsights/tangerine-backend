---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: postgresql

objects:
- kind: Secret
  apiVersion: v1
  metadata:
    name: postgresql
  stringData:
    database-name: vectordb
    database-password: vectordb
    database-user: vectordb
  type: Opaque

- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: postgresql
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi
    volumeMode: Filesystem

- kind: Deployment
  apiVersion: apps/v1
  metadata:
    name: postgresql
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    replicas: 1
    selector:
      matchLabels:
        app: postgresql
    template:
      metadata:
        labels:
          app: postgresql
      spec:
        volumes:
          - name: postgresql-data
            persistentVolumeClaim:
              claimName: postgresql
        initContainers:
          - command:
            - /bin/bash
            - -c
            - psql -c "CREATE EXTENSION vector;" 'CREATE EXTENSION IF NOT EXISTS vector;'
            name: postgresql-init
            resources:
              requests:
                memory: 512Mi
                cpu: 250m
              limits:
                memory: 512Mi
                cpu: 1
            env:
              - name: POSTGRESQL_USER
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: database-user
              - name: POSTGRESQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: database-password
              - name: POSTGRESQL_DATABASE
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: database-name
            imagePullPolicy: IfNotPresent
            volumeMounts:
              - name: postgresql-data
                mountPath: /var/lib/pgsql/data
            image: 'quay.io/rh-aiservices-bu/postgresql-15-pgvector-c9s:0.0.2'
        containers:
          - resources:
              requests:
                memory: 512Mi
                cpu: 250m
              limits:
                memory: 512Mi
                cpu: 1
            readinessProbe:
              exec:
                command:
                  - /usr/libexec/check-container
              initialDelaySeconds: 5
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: /dev/termination-log
            name: postgresql
            livenessProbe:
              exec:
                command:
                  - /usr/libexec/check-container
                  - '--live'
              initialDelaySeconds: 120
              timeoutSeconds: 10
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            env:
              - name: POSTGRESQL_USER
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: database-user
              - name: POSTGRESQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: database-password
              - name: POSTGRESQL_DATABASE
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: database-name
            securityContext:
              capabilities: {}
              privileged: false
            ports:
              - containerPort: 5432
                protocol: TCP
            imagePullPolicy: IfNotPresent
            volumeMounts:
              - name: postgresql-data
                mountPath: /var/lib/pgsql/data
            terminationMessagePolicy: File
            image: 'quay.io/rh-aiservices-bu/postgresql-15-pgvector-c9s:0.0.2'
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler

- kind: Service
  apiVersion: v1
  metadata:
    name: postgresql
  spec:
    selector:
      app: postgresql
    ports:
      - name: postgresql
        protocol: TCP
        port: 5432
        targetPort: 5432